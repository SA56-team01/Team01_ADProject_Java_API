# SERVER PORT
server.port = 8080

# DATABASE CONFIGURATION
spring.datasource.url=jdbc:mysql://localhost:3306/spotify
spring.datasource.username=root
spring.datasource.password=password
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.hikari.maximum-pool-size=10

# turn off springboot banner
spring.main.banner-mode=off

#reduce logging level. set logging level to warn
logging.level.root=warn

# add logging configs to display SQL statements
logging.level.org.hibernate.SQL=debug
logging.level.org.hibernate.orm.jdbc.bind=trace

# configure jpa/hibernate to auto-create tables
# the update config wil keep the existing data in the table
spring.jpa.show-sql = true
spring.jpa.hibernate.ddl-auto=create-drop

# ## test spotify api
# spotify.api.base-url=https://api.spotify.com
# spotify.api.access-token=BQCH-J4aUm8CiIcpEB33fQ-Ed8NHw76O6nn-cdrlyX3KuBqhPIS9MXd0r65KnIxSeEQB6AtDyuH_xedWWKgxp-gc5mCviDH0FwMP5ImnOcDbaEpLouU

# # spotify log in
# spring.security.oauth2.client.registration.spotify.client-id=CLIENT_ID
# spring.security.oauth2.client.registration.spotify.client-secret=CLIENT_SECRET
# spring.security.oauth2.client.registration.spotify.redirect-uri=REDIRECT_URI
# spring.security.oauth2.client.provider.spotify.authorization-uri=https://accounts.spotify.com/authorize
# spring.security.oauth2.client.provider.spotify.token-uri=https://accounts.spotify.com/api/token
# spring.security.oauth2.client.provider.spotify.user-info-uri=https://api.spotify.com/v1/me

